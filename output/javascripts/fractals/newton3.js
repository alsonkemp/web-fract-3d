// Generated by CoffeeScript 1.6.3
(function() {
  var _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  WebFract3D.Fractals.Newton3 = (function(_super) {
    __extends(Newton3, _super);

    function Newton3() {
      _ref = Newton3.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Newton3.prototype.poles = WebFract3D.Fractals.Base.prototype.makePoles(3);

    Newton3.prototype.calculate = function(r, i) {
      var a, deni, denr, numi, numr, tempi, tempr, z2i, z2r, zi, zr, _i, _ref1, _ref2, _ref3, _ref4;
      zr = 10;
      zi = 10;
      z2r = r;
      z2i = i;
      for (a = _i = 0; _i <= 100000000; a = ++_i) {
        if (a > (this.fractal_state.max_iterations - 1) || this.complexDistance(zr, zi, z2r, z2i) < this.quittingDistance) {
          return [a, zr, zi];
        }
        zr = z2r;
        zi = z2i;
        _ref1 = this.complexMultiplication(zr, zi, zr, zi), tempr = _ref1[0], tempi = _ref1[1];
        _ref2 = this.complexMultiplication(tempr, tempi, zr, zi), numr = _ref2[0], numi = _ref2[1];
        numr -= 1;
        _ref3 = this.complexMultiplication(3 * zr, 3 * zi, zr, zi), denr = _ref3[0], deni = _ref3[1];
        _ref4 = this.complexDivision(numr, numi, denr, deni), z2r = _ref4[0], z2i = _ref4[1];
        z2r = zr - z2r;
        z2i = zi - z2i;
      }
    };

    return Newton3;

  })(WebFract3D.Fractals.Newton2);

}).call(this);
